<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>h404bi</title>
  <subtitle>There will still be love in this world</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://h404bi.com/"/>
  <updated>2015-10-05T06:30:54.000Z</updated>
  <id>https://h404bi.com/</id>
  
  <author>
    <name>h404bi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自己买的域名哭着也要续费</title>
    <link href="https://h404bi.com/blog/2015/10/02/dot-im-domain-renewal.html"/>
    <id>https://h404bi.com/blog/2015/10/02/dot-im-domain-renewal.html</id>
    <published>2015-10-02T14:07:48.000Z</published>
    <updated>2015-10-05T06:30:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>两种事，人活着一定会做的：一是做些爽的事，二是为爽后擦屁股。</p>
<p>去年十月，也不知道是哪根经出错了，剁了个 .im 域名。在域名怪兽买入的，当时 checkout 时才知道仅支持 CC 及 CC through Paypal 付款。</p>
<p>学生狗没有 CC，域名很想买，又要省钱。于是就用了很多人都想到或用过的 VCC。那时错过了财付通的运通卡，了解了各种 VCC 后就选了全球付。扣了不少转换费手续费后买下了域名。</p>
<p>然后今年续费的麻烦事来了，爽后擦屁股。</p>
<p>八月份就开始想着怎么续费。因为全球付不实名账户最低充值 100 元，我没实名。于是为了尽量一次用完充入的钱，我就想着能不能一次续几年。然后发 ticket 询问被告知只能续一年。而且续费间隔被限制在到期前六个月。</p>
<figure><img src="/uploads/renewal-restriction.png" title="到期续费提醒"><figcaption><p>到期续费提醒</p></figcaption></figure>
<p>我不是很清楚域名注册的相关规定，但是据我所知某些后缀的域名是可以一次购买或续费好几年，又或者通过多次续费（没有续费间隔限制）延长时间的。.me 好像就是吧，之前了解到有人多次续费弄了好几年，好像有优惠什么的。</p>
<figure class="right"><img src="/uploads/price-dot-im-domain.png" title="各大域名商 .im 价格"><figcaption><p>各大域名商 .im 价格</p></figcaption></figure>
<p>既然不行那就看看其它注册商。.im 最便宜无疑是域名怪兽家（9 刀），不然我也不会在那买。<code>name.com</code> 家的话是 13 刀，好像可以 Paypal 确认支付，其实还可以接收。但发现在它家 .im 不能开隐私保护，这在域名怪兽那可是免费的（对，就是免费的，文末再介绍一下），于是就犹豫了。至于其它注册商全然没看，太贵无视（普遍 20 刀）。</p>
<p>回到域名怪兽家，既然不能续多年，那问问还有没有其他支付手段吧，尽量避免用全球付。跟客服来来回回十几封邮件，最终被告知除了网站标出的方式，最多只能用银行转帐（bank transfer）方式付款，还要等数天确认。期间还被建议先往 Paypal 里充值再下单，天知道在天朝不能充值 PP。（无奈脸</p>
<figure><img src="/uploads/ticket-screenshot.png"></figure>
<p>我想想这比全球付还麻烦，就硬着头皮往全球付打了钱，然后续了费。发现全球付收费规则改了，算算也没多扣多少，不过钱放里面总觉得哪天悄悄给你扣钱，找机会赶紧用掉。</p>
<p>然后就没有然后了。</p>
<p>说到域名，不知道从何时开始，各种后缀的域名如雨后春笋般涌出，什么 .website .xxx .xyz <s>.xxoo 这个好像没有</s>，眼花缭乱。大公司有钱任性，购买各种后缀的域名来保护产品没得说。但有时候觉得个人注册这些五花八门后缀的域名，真的是交学费吧。什么 .photography 的，真拿来做站也没什么人愿意好好地往浏览器里键入域名吧，而且又容易打错。其实也就图个个性，自己想注册的域名要有 .com 后缀，谁还愿意折腾其它后缀呢？</p>
<p>最后再说说域名怪兽，就是 <a href="http://Domainmonster.com" target="_blank" rel="external">Domainmonster.com</a> 了，英国服务商（所以 .im 才会那么便宜吧…）。在这家能注册的后缀非常多，有多少我就不数了。而且提供多种 <a href="http://www.domainmonster.com/domain-name/" target="_blank" rel="external">Domain Services</a>，其中最值的是免费的隐私保护，无论是新老域名。</p>
<figure><img src="/uploads/domainmonster-free-whois-privacy.png"></figure>
<p>付款方式前面已说，目前仅支持 CC 及 CC through Paypal 付款，所以没 CC 会比较麻烦。跟客服通邮件时已经建议其考虑下支持支付宝，至于后面到底如何，不报任何希望哈哈。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两种事，人活着一定会做的：一是做些爽的事，二是为爽后擦屁股。&lt;/p&gt;
&lt;p&gt;去年十月，也不知道是哪根经出错了，剁了个 .im 域名。在域名怪兽买入的，当时 checkout 时才知道仅支持 CC 及 CC through Paypal 付款。&lt;/p&gt;
&lt;p&gt;学生狗没有 CC
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Newbie Mac Bootstrap</title>
    <link href="https://h404bi.com/blog/2015/09/20/new-mac-env-bootstrap.html"/>
    <id>https://h404bi.com/blog/2015/09/20/new-mac-env-bootstrap.html</id>
    <published>2015-09-20T09:28:19.000Z</published>
    <updated>2016-12-17T14:35:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>入坑 Mac OS X，写点 note (nonsense) 以备玩坏系统重装时翻查。</p>
<h2 id="command-line-tools-for-xcode">Command Line Tools for Xcode</h2>
<p>OS X 系统不像 Ubuntu 等发行版，系统默认是不包含编译工具链的（因为不是每位用户都需要吧，人性化？）。所以在使用时如果执行到含有诸如 gcc、make 等命令时，就会出现以下情况：</p>
<figure class="right"><img src="/uploads/20150810021812.png" title="This is an example image caption. " alt="the alt"><figcaption><p>This is an example image caption. </p></figcaption></figure>
<p>这时就需要安装苹果提供的命令行工具包（Command Line Tools，下称 CLT）了。安装 CLT 有几种方法：</p>
<h3 id="1-通过-xcode-安装">1. 通过 Xcode 安装</h3>
<p><code>for Xcode</code> 嘛，当然能通过 Xcode 安装了，只不过没有安装 Xcode 亦可使用。所以如果你有安装 Xcode 的话，直接通过 Xcode 安装就好了。（我自己并没有安装 Xcode，因为暂无打算学习 Mac 相关的开发，所以私以为没必要耗费几个 G 的硬盘空间塞下 Xcode 吧， MacBook 的硬盘寸寸金啊。。。）。</p>
<h3 id="2-通过终端安装">2. 通过终端安装</h3>
 <figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ xcode-select install</div></pre></td></tr></table></figure>
<p>或者输入 gcc 触发前文所提到的情况（见前文图）亦可。</p>
<h3 id="3-通过离线安装包安装">3. 通过离线安装包安装</h3>
<p>如果用前面的方法安装不成功的话，可到 Apple 下载中心获取离线安装包进行安装。（认准苹果官网）</p>
<blockquote>
<p><a href="https://developer.apple.com/downloads" target="_blank" rel="external">https://developer.apple.com/downloads</a> （需要使用 AppleID 登录）</p>
</blockquote>
<p>安装 CLT 后就可以使用工具链编译安装软件了，这是 Bootstrap A New Mac 的第一步。</p>
<h2 id="where-is-the-package-manager-of-os-x">Where is the package manager of OS X?</h2>
<p>用 Mac 之前我还真没想过 OS X 有没有包管理工具。初次用了一会儿后，总觉得好像少了些什么，又说不出来。后在 Win 机上 Xshell 管理 VPS 时，才猛然想起：OS X 下用什么管理软件包？！Where is the package manager of OS X? 检索后才知道 OS X 不止默认不带 toolchains，还没有 package manager。带着使用 Linux 发行版心态的我不免有点失望。</p>
<h3 id="homebrew">Homebrew</h3>
<p>官方没有社区有。强大的 Mac 社区造就了各种易用的工具。软件包管理工具就各式各样。其中最出名的两个是 <strong><a href="https://www.macports.org" target="_blank" rel="external">Macport</a></strong> 和 <strong><a href="http://brew.sh" target="_blank" rel="external">Homebrew</a></strong>。二者有着截然不同的理念，并且越来越多用户选择了 Homebrew。下面进行 Bootstrap A New Mac 的第二步。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ ruby <span class="_">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div></pre></td></tr></table></figure>
<p><small>OS X 自带 ruby，难怪 ruby 社区一股 Macbook 风气。</small></p>
<p>然后就可以像用 <code>apt-get install/update</code> 那样 <code>brew install/update</code> 了，更多用法参见 <a href="https://github.com/Homebrew/homebrew/tree/master/share/doc/homebrew#readme" target="_blank" rel="external">Doc</a>。</p>
<h3 id="homebrew-cask">Homebrew-Cask</h3>
<p>介绍了 Homebrew 就不得不说 <strong><a href="http://caskroom.io/" target="_blank" rel="external">Caskroom</a></strong> 了。Homebrew 掌管了各种 CLI 软件包的管理，App Store 提供各种 GUI 应用，这 Cask 又是什么？Cask 其实是 Homebrew 的一个扩展，能让 brew 支持安装和管理 GUI 应用。能在 App Store 获取到的应用当然最好在上面下载安装了，但有些应用程序是没有上架 App Store 的（比如 IntelliJ IDEA），得去程序的官网各种点击下载安装。于是不甘这样的 Mac 社区 Geek 们搞了个 Homebrew-Cask，然后就能打开终端一句指令愉快地安装 GUI 应用了，比如：<code>brew cask install intellij-idea-ce</code>。安装 Cask 只需：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><div class="line">$ brew install caskroom/cask/brew-cask</div></pre></td></tr></table></figure>
<p><em>题外话：Cask 开发者们最近在 GitHub 上热论着一场改革<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，说是要改变 Cask 目前的行为，以更贴合 regular usage，不过不能完美过渡的话会不会让用户感觉混乱。。</em></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://github.com/caskroom/homebrew-cask/issues/13201" target="_blank" rel="external">Homebrew-Cask issue #13201</a> <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;入坑 Mac OS X，写点 note (nonsense) 以备玩坏系统重装时翻查。&lt;/p&gt;
&lt;h2 id=&quot;command-line-tools-for-xcode&quot;&gt;Command Line Tools for Xcode&lt;/h2&gt;
&lt;p&gt;OS X 系统不像 Ubun
    
    </summary>
    
    
      <category term="mac" scheme="https://h404bi.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>用 Scoop 改善 Windows Powershell</title>
    <link href="https://h404bi.com/blog/2015/08/23/use-scoop-to-enhance-windows-powershell.html"/>
    <id>https://h404bi.com/blog/2015/08/23/use-scoop-to-enhance-windows-powershell.html</id>
    <published>2015-08-23T15:19:11.000Z</published>
    <updated>2015-09-04T09:19:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一本道">一本道</h2>
<p>软件包管理工具想必大家已经很清楚并且使用过。Debian/ Ubuntu 的 apt-get，Arch Linux 的
Pacman，就连本身并无自带包管理工具的 Mac 都有了 Macports 和极其好用的 Homebrew。至于
Windows 下，Geek 们也生产出各式各样的工具以贴合他们的 *nix
使用习惯。其中软件包管理工具中比较出名的就是 <strong><a href="https://chocolatey.org/" target="_blank" rel="external">chocolatey</a></strong> 了。</p>
<p>然而本文并不细谈 chocolatey，而谈的是一个叫做 <strong><a href="http://scoop.sh/" target="_blank" rel="external">Scoop</a></strong>
工具。官网上的描述是“A command-line installer for Windows”，其实说白了，就是和
chocolatey 同属一种东西，也就是 Windows 下的软件包管理工具，但其并没有 chocolatey 出名与强大。</p>
<p>那我为什么要用 Scoop 而不是 chocolatey？一正是 chocolatey
够强大，但其实我一开始并没打算折腾 Powershell，因为已经在用
Git Bash / MSYS2，所以我无需使用太过庞大的工具；二是 scoop
有吸引我的地方，它能把 Powershell 弄得看起来像 Linux shell
的样子，这也是为什么我要折腾 PS 的促因。</p>
<p>看 Scoop 主页的 Demo 视频，你会发现视频里的 PS 用起来很简约，而又是更方便了，不仅能安装运行各种
GNU 工具（<code>curl</code>、<code>vim</code> 等），而且 <code>$PS1</code> 看起来像是 Linux 下的终端，还能显示 git
仓库的分支信息，简直 Geek 范十足。虽说已有 MSYS2 这种更集成的 *nix 环境，但既然看到了
Scoop 又挺不错的于是就折腾下呗。毕竟是 Windows 内置的嘛，还能 Win + R powershell
快速打开，有时候打下指令（<code>ipconfig</code>、<code>nslookup</code> 什么的）还是会用到的呢。</p>
<figure class="right"><img src="/uploads/2015-08-23-powershell.png" title="配置 Scoop 后的样子"><figcaption><p>配置 Scoop 后的样子</p></figcaption></figure>
<h2 id="正题">正题</h2>
<ol>
<li>
<p>确保你已安装 Powershell 3（其实 Windows7+ 应该都已经集成了），然后 WIn + R 输入 powershell 打开 PS，一句命令安装 scoop：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><div class="line">iex (<span class="built_in">new-object</span> net.webclient).downloadstring(<span class="string">'https://get.scoop.sh'</span>)</div></pre></td></tr></table></figure>
</li>
<li>
<p>安装完成后输入 <code>scoop help</code>，如果报错则需要允许 PS 提供脚本执行权限，执行：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><div class="line"><span class="built_in">set-executionpolicy</span> unrestricted -s cu</div></pre></td></tr></table></figure>
</li>
<li>
<p>然后就可以像 apt-get 那样 <code>install/uninstall</code> 软件包了：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><div class="line">scoop install pkgname</div></pre></td></tr></table></figure>
<p>用 scoop 安装软件包时不会弹出 UAC 要求提权，因为软件包是安装在当前用户的 <code>appdata</code> 下的，并通过 shims path 管理调用执行文件，而不是将每个执行文件的路径都加到 path 中。</p>
</li>
<li>
<p>开始美化控制台显示样式（★）
首先 <code>scoop install concfg</code> 安装 <code>concfg</code>，然后导入 Solarized 主题 <code>concfg import solarized small</code>（concfg 支持多种主题，详见 <a href="https://github.com/lukesampson/concfg/tree/master/presets" target="_blank" rel="external">concfg/presets</a>），期间会提示你替换了哪些控制台（其实也就 <code>CMD</code> 和 <code>PS</code>）的样式。
然后 <code>scoop install pshazz</code> 安装 <code>pshazz</code>，当安装完后马上就能看到 shell prompt 发生变化了，而且 cd 到一个 git 仓库还能看到分支信息，还支持 git auto-completion 呢。</p>
</li>
<li>
<p>然后还可以安装使用 <code>touch</code>、<code>curl</code>、<code>vim</code> 等更多的 GNU 命令行工具。scoop 官方的 Packages 是 <a href="https://github.com/lukesampson/scoop/tree/master/bucket" target="_blank" rel="external">bucket</a>，如果里面没有你想安装的工具你还可以<a href="https://github.com/lukesampson/scoop/wiki/Buckets#creating-your-own-bucket" target="_blank" rel="external">自定义 bucket</a> 或 <a href="https://github.com/lukesampson/scoop/wiki/Creating-an-app-manifest" target="_blank" rel="external">创建一个 package</a>。</p>
</li>
<li>
<p>最后还能用 scoop 进行开发语言环境的<a href="https://github.com/lukesampson/scoop/wiki/Switching-Ruby-and-Python-Versions" target="_blank" rel="external">多版本控制</a>呢，比如 <code>scoop install python27 python</code> 同时安装 Py2.7 和 Py3，然后 <code>scoop reset python27</code> 选择 Py2.7，<code>scoop reset python</code> 则设置为 Py3。</p>
</li>
</ol>
<p>至于更详尽的使用方法请 <code>scoop help</code> 或访问 <a href="https://github.com/lukesampson/scoop/wiki" target="_blank" rel="external">Scoop Wiki</a> 咯。</p>
<p>总结：所以说这种人就只能为他们的这种“如此难以伺候”而不断地折腾自己的电脑，折腾自己。这就是所谓“生命不息，折腾不止”吧哈哈哈。。。卒</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一本道&quot;&gt;一本道&lt;/h2&gt;
&lt;p&gt;软件包管理工具想必大家已经很清楚并且使用过。Debian/ Ubuntu 的 apt-get，Arch Linux 的
Pacman，就连本身并无自带包管理工具的 Mac 都有了 Macports 和极其好用的 Homebrew。
    
    </summary>
    
    
      <category term="windows" scheme="https://h404bi.com/tags/windows/"/>
    
      <category term="superuser" scheme="https://h404bi.com/tags/superuser/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://h404bi.com/blog/2015/05/20/hello-world.html"/>
    <id>https://h404bi.com/blog/2015/05/20/hello-world.html</id>
    <published>2015-05-20T12:28:19.000Z</published>
    <updated>2015-09-09T13:32:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><s>欢迎回到地球。</s></p>
<p>每次在硬盘找旧文件时，总会经意或不经意地点进放有旧博客备份的目录。然后心里想什么时候再处理下这些博文数据呢？等到终于解压博客档案，导入 SQL 后，发现也没什么值得转换的。既然都打开了，还是截些图纪念一下吧。以后应该就不会再打开了，当然数据还会留档。。</p>
<figure><img src="/uploads/dark-past.png"></figure>
<p>自建博客以来见过不少次 Hello World 了，说不定现在的这里又会是未来哪个时候嘴里说的“黑历史”呢，哈哈！…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;s&gt;欢迎回到地球。&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;每次在硬盘找旧文件时，总会经意或不经意地点进放有旧博客备份的目录。然后心里想什么时候再处理下这些博文数据呢？等到终于解压博客档案，导入 SQL 后，发现也没什么值得转换的。既然都打开了，还是截些图纪念一下吧。以后应该就不会再打开了
    
    </summary>
    
    
  </entry>
  
</feed>
