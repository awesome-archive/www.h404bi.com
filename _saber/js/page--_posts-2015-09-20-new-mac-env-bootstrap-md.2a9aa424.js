(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{53:function(e,t,a){"use strict";a.r(t);var r=a(0),o=function(e){var t={attributes:{slug:"new-mac-env-bootstrap",layout:"post",title:"Newbie Mac Bootstrap",date:"2015-09-20 17:28:19",updated:"2015-09-20 17:28:19",hidden:!0,cover:"/uploads/2018/12/20181225012.png",excerpt:"<p>入坑 Mac OS X，写点 note (nonsense) 以备玩坏系统重装时翻查。</p>\n",createdAt:"2015-09-20T09:28:19.000Z",updatedAt:"2015-09-20T09:28:19.000Z",type:"post",permalink:"/blog/2015/09/new-mac-env-bootstrap"},contentType:"markdown"},a=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=t}].concat(a);var r=e.options.PageComponent;r&&(e.options.transition=r.transition),void 0===e.options.transition&&(e.options.transition=t.attributes.transition),e.options.name="page-wrapper-"+t.attributes.slug.replace(/[^0-9a-z\-]/i,"-")},s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("layout-manager",{attrs:{page:e.$page}},[a("p",[e._v("入坑 Mac OS X，写点 note (nonsense) 以备玩坏系统重装时翻查。")]),e._v(" "),a("h2",{attrs:{id:"command-line-tools-for-xcode"}},[e._v("Command Line Tools for Xcode")]),e._v(" "),a("p",[e._v("OS X 系统不像 Ubuntu 等发行版，系统默认是不包含编译工具链的（因为不是每位用户都需要吧，人性化？）。所以在使用时如果执行到含有诸如 gcc、make 等命令时，就会出现以下情况：")]),e._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"/static/img/loading.gif",alt:"提示需要命令行工具",title:"提示需要命令行工具","data-src":"/uploads/2015/08/20150810001.png"}}),a("figcaption",[e._v("提示需要命令行工具")])]),e._v(" "),a("p",[e._v("这时就需要安装苹果提供的命令行工具包（Command Line Tools，下称 CLT）了。安装 CLT 有几种方法：")]),e._v(" "),a("h3",{attrs:{id:"1.-%E9%80%9A%E8%BF%87-xcode-%E5%AE%89%E8%A3%85"}},[e._v("1. 通过 Xcode 安装")]),e._v(" "),a("p",[a("code",{pre:!0},[e._v("for Xcode")]),e._v(" 嘛，当然能通过 Xcode 安装了，只不过没有安装 Xcode 亦可使用。所以如果你有安装 Xcode 的话，直接通过 Xcode 安装就好了。（我自己并没有安装 Xcode，因为暂无打算学习 Mac 相关的开发，所以私以为没必要耗费几个 G 的硬盘空间塞下 Xcode 吧， MacBook 的硬盘寸寸金啊。。。）。")]),e._v(" "),a("h3",{attrs:{id:"2.-%E9%80%9A%E8%BF%87%E7%BB%88%E7%AB%AF%E5%AE%89%E8%A3%85"}},[e._v("2. 通过终端安装")]),e._v(" "),a("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"bash"}},[a("pre",{pre:!0,attrs:{class:"saber-highlight-code language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("$ xcode-select install")])])]),a("p",[e._v("或者输入 gcc 触发前文所提到的情况（见前文图）亦可。")]),e._v(" "),a("h3",{attrs:{id:"3.-%E9%80%9A%E8%BF%87%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85%E5%AE%89%E8%A3%85"}},[e._v("3. 通过离线安装包安装")]),e._v(" "),a("p",[e._v("如果用前面的方法安装不成功的话，可到 Apple 下载中心获取离线安装包进行安装。（认准苹果官网）")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://developer.apple.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.apple.com/downloads")]),e._v(" （需要使用 AppleID 登录）")])]),e._v(" "),a("p",[e._v("安装 CLT 后就可以使用工具链编译安装软件了，这是 Bootstrap A New Mac 的第一步。")]),e._v(" "),a("h2",{attrs:{id:"where-is-the-package-manager-of-os-x%3F"}},[e._v("Where is the package manager of OS X?")]),e._v(" "),a("p",[e._v("用 Mac 之前我还真没想过 OS X 有没有包管理工具。初次用了一会儿后，总觉得好像少了些什么，又说不出来。后在 Win 机上 Xshell 管理 VPS 时，才猛然想起：OS X 下用什么管理软件包？！Where is the package manager of OS X? 检索后才知道 OS X 不止默认不带 toolchains，还没有 package manager。带着使用 Linux 发行版心态的我不免有点失望。")]),e._v(" "),a("h3",{attrs:{id:"homebrew"}},[e._v("Homebrew")]),e._v(" "),a("p",[e._v("官方没有社区有。强大的 Mac 社区造就了各种易用的工具。软件包管理工具就各式各样。其中最出名的两个是 "),a("strong",[a("a",{attrs:{href:"https://www.macports.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Macport")])]),e._v(" 和 "),a("strong",[a("a",{attrs:{href:"http://brew.sh",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew")])]),e._v("。二者有着截然不同的理念，并且越来越多用户选择了 Homebrew。下面进行 Bootstrap A New Mac 的第二步。")]),e._v(" "),a("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"bash"}},[a("pre",{pre:!0,attrs:{class:"saber-highlight-code language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v('$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"')])])]),a("p",[a("small",[e._v("OS X 自带 ruby，难怪 ruby 社区一股 Macbook 风气。")])]),e._v(" "),a("p",[e._v("然后就可以像用 "),a("code",{pre:!0},[e._v("apt-get install/update")]),e._v(" 那样 "),a("code",{pre:!0},[e._v("brew install/update")]),e._v(" 了，更多用法参见 "),a("a",{attrs:{href:"https://github.com/Homebrew/homebrew/tree/master/share/doc/homebrew#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("Doc")]),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"homebrew-cask"}},[e._v("Homebrew-Cask")]),e._v(" "),a("p",[e._v("介绍了 Homebrew 就不得不说 "),a("strong",[a("a",{attrs:{href:"http://caskroom.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Caskroom")])]),e._v(" 了。Homebrew 掌管了各种 CLI 软件包的管理，App Store 提供各种 GUI 应用，这 Cask 又是什么？Cask 其实是 Homebrew 的一个扩展，能让 brew 支持安装和管理 GUI 应用。能在 App Store 获取到的应用当然最好在上面下载安装了，但有些应用程序是没有上架 App Store 的（比如 IntelliJ IDEA），得去程序的官网各种点击下载安装。于是不甘这样的 Mac 社区 Geek 们搞了个 Homebrew-Cask，然后就能打开终端一句指令愉快地安装 GUI 应用了，比如："),a("code",{pre:!0},[e._v("brew cask install intellij-idea-ce")]),e._v("。安装 Cask 只需：")]),e._v(" "),a("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"bash"}},[a("pre",{pre:!0,attrs:{class:"saber-highlight-code language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("$ brew install caskroom/cask/brew-cask")])])]),a("p",[a("em",[e._v("题外话：Cask 开发者们最近在 GitHub 上热论着一场改革"),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn1",id:"fnref1"}},[e._v("[1]")])]),e._v("，说是要改变 Cask 目前的行为，以更贴合 regular usage，不过不能完美过渡的话会不会让用户感觉混乱。。")])]),e._v(" "),a("hr",{staticClass:"footnotes-sep"}),e._v(" "),a("section",{staticClass:"footnotes"},[a("ol",{staticClass:"footnotes-list"},[a("li",{staticClass:"footnote-item",attrs:{id:"fn1"}},[a("p",[a("a",{attrs:{href:"https://github.com/caskroom/homebrew-cask/issues/13201",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew-Cask issue #13201")]),e._v(" "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref1"}},[e._v("↩︎")])])])])])])},[],!1,null,null,null);"function"==typeof o&&o(s);t.default=s.exports}}]);